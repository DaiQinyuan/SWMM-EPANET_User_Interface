<HTML><HEAD><TITLE>Tank Properties</TITLE><META NAME="GENERATOR" CONTENT="ForeHTML Pro 2.0">
<STYLE TYPE="text/css"><!-- 

     .BannerBase { font-size: 12pt ; font-weight: bold; margin: 5pt  0pt  5pt  0pt ; font-family: Arial,sans-serif;  }
     .Base { font-size: 10pt ; margin: 6pt  0pt  0pt  0pt ; font-family: Arial,sans-serif;  }
     .Base1 { font-size: 10pt ; margin: 6pt  0pt  0pt  0pt ; font-family: Arial,sans-serif;  }
     .BodyText2 { font-size: 12pt ; margin: 0pt  36pt  0pt  36pt ; font-family: Times New Roman,serif;  }
     .BodyText21 { font-size: 12pt ; margin: 0pt  36pt  0pt  36pt ; font-family: Times New Roman,serif;  }
     .Bullet1 { font-size: 10pt ; font-family: Arial,sans-serif;  }
     .Bullet2 { font-size: 10pt ; margin: 6pt  18pt  0pt  18pt ; text-indent: -18pt ; font-family: Arial,sans-serif;  }
     .Bullet3 { font-size: 10pt ; margin: 6pt  18pt  0pt  18pt ; text-indent: -18pt ; font-family: Arial,sans-serif;  }
     .Bullet4 { font-size: 10pt ; font-family: Arial,sans-serif;  }
     .Bullet5 { font-size: 10pt ; font-family: Arial,sans-serif;  }
     .ButtonBar { font-size: 6pt ; font-weight: bold; margin: 5pt  -0.1in  5pt  -0.1in ; font-family: Arial,sans-serif;  }
     .HeadingBase { font-size: 11pt ; margin: 7pt  0pt  0pt  0pt ; line-height: 11pt ; font-family: Arial,sans-serif;  }
     .HeadingBase1 { font-size: 11pt ; margin: 7pt  0pt  0pt  0pt ; line-height: 11pt ; font-family: Arial,sans-serif;  }
     .HTMLBASE { font-size: 12pt ; margin: 0pt  1px  0pt  0pt ; font-family: Times New Roman,serif;  }
     BODY { margin: 0pt  1px  0pt  0pt ;  }
     .Indented { font-size: 10pt ; margin: 6pt  18pt  0pt  18pt ; font-family: Arial,sans-serif;  }
     .List { font-size: 11pt ; margin: 0pt  18pt  0pt  18pt ; text-indent: -18pt ; font-family: Times New Roman,serif;  }
     .ListBullet { font-size: 11pt ; margin: 6pt  90pt  0pt  90pt ; text-indent: -18pt ; font-family: Times New Roman,serif;  }
     .ListBullet1 { font-size: 11pt ; margin: 6pt  90pt  0pt  90pt ; text-indent: -18pt ; font-family: Times New Roman,serif;  }
     .ListNumber { font-size: 11pt ; margin: 6pt  90pt  0pt  90pt ; text-indent: -18pt ; font-family: Times New Roman,serif;  }
     .ListNumber1 { font-size: 11pt ; margin: 6pt  90pt  0pt  90pt ; text-indent: -18pt ; font-family: Times New Roman,serif;  }
     .List1 { font-size: 11pt ; margin: 0pt  18pt  0pt  18pt ; text-indent: -18pt ; font-family: Times New Roman,serif;  }
     .Normal { font-size: 12pt ; margin: 0pt  1px  0pt  0pt ; font-family: Times New Roman,serif;  }
     .Normal1 { font-size: 12pt ; margin: 0pt  1px  0pt  0pt ; font-family: Times New Roman,serif;  }
     .Number1 { font-size: 10pt ; font-family: Arial,sans-serif;  }
     .Number2 { font-size: 10pt ; font-family: Arial,sans-serif;  }
     .Number3 { font-size: 10pt ; font-family: Arial,sans-serif;  }
     .Number4 { font-size: 10pt ; font-family: Arial,sans-serif;  }
     .Number5 { font-size: 10pt ; font-family: Arial,sans-serif;  }

--></STYLE>
</HEAD>

<BODY BGPROPERTIES=FIXED>
<!--ForeHelp.Banner-->

<P STYLE="font-size: 12pt ; font-weight: bold; margin: 5pt  0pt  5pt  0pt ; font-family: Arial,sans-serif; ">
<SPAN  STYLE="color: #0000ff; ">Tank Properties</SPAN></P><!--ForeHelp.Ignore--><HR><!--ForeHelp.EndIgnore--><!--ForeHelp.EndBanner-->

<P CLASS="Base">
<B><U>Tank ID</U></B></P>
<P CLASS="Base">
A unique label used to identify the tank. It can consist of a combination of up to 15 numerals or characters. It cannot be the same as the ID for any other node. This is a required property.</P>
<P CLASS="Base">
<B><U>X-Coordinate</U></B></P>
<P CLASS="Base">
The horizontal location of the tank on the map, measured in the map's distance units. If left blank the tank will not appear on the network map.</P>
<P CLASS="Base">
<B><U>Y-Coordinate</U></B></P>
<P CLASS="Base">
The vertical location of the tank on the map, measured in the map's distance units. If left blank the tank will not appear on the network map.</P>
<P CLASS="Base">
<B><U>Description</U></B></P>
<P CLASS="Base">
An optional text string that describes other significant information about the tank.</P>
<P CLASS="Base">
<B><U>Tag</U></B></P>
<P CLASS="Base">
An optional text string (with no spaces) used to assign the tank to a category, such as a pressure zone.</P>
<P CLASS="Base">
<B><U>Elevation</U></B></P>
<P CLASS="Base">
The elevation above a common datum in feet (meters) of the bottom shell of the tank. This is a required property.</P>
<P CLASS="Base">
<B><U>Initial Level</U></B></P>
<P CLASS="Base">
The height in feet (meters) of the water surface above the bottom elevation of the tank at the start of the simulation. This is a required property.</P>
<P CLASS="Base">
<B><U>Minimum Level</U></B></P>
<P CLASS="Base">
The minimum height in feet (meters) of the water surface above the bottom elevation that will be maintained. The tank will not be allowed to drop below this level. This is a required property.</P>
<P CLASS="Base">
<B><U>Maximum Level</U></B></P>
<P CLASS="Base">
The maximum height in feet (meters) of the water surface above the bottom elevation that will be maintained. The tank will not be allowed to rise above this level. This is a required property.</P>
<P CLASS="Base">
<B><U>Diameter</U></B></P>
<P CLASS="Base">
The diameter of the tank in feet (meters). For cylindrical tanks this is the actual diameter. For square or rectangular tanks it can be an equivalent diameter equal to 1.128 times the square root of the cross-sectional area. For tanks whose geometry will be described by a curve (see below) it can be set to any value. This is a required property.</P>
<P CLASS="Base">
<B><U>Minimum Volume</U></B></P>
<P CLASS="Base">
The volume of water in the tank when it is at its minimum level, in cubic feet (cubic meters). This is an optional property, useful mainly for describing the bottom geometry of non-cylindrical tanks where a full volume versus depth curve will not be supplied (see below).</P>
<P CLASS="Base">
<B><U>Volume Curve</U></B></P>
<P CLASS="Base">
The ID label of a curve used to describe the relation between <A HREF="Volume_C.htm">tank volume and water level</A>. This property is useful for characterizing irregular-shaped tanks. If left blank then the tank is assumed to be cylindrical.</P>
<P CLASS="Base">
<B><U>Mixing Model</U></B></P>
<P CLASS="Base">
The type of water quality mixing that occurs within the tank. The choices include</P>
<P STYLE="font-size: 10pt ; margin: 0pt  18pt  0pt  18pt ; text-indent: -18pt ; font-family: Arial,sans-serif; "><IMG SRC="GENERATE/DIAMOND.gif" ALT="GENERATE/DIAMOND.gif" WIDTH="8" HEIGHT="12" ALIGN="BASELINE" BORDER="0">&nbsp;&nbsp;&nbsp;&nbsp;
fully mixed (<B>MIXED</B>),</P>
<P STYLE="font-size: 10pt ; margin: 0pt  18pt  0pt  18pt ; text-indent: -18pt ; font-family: Arial,sans-serif; "><IMG SRC="GENERATE/DIAMOND.gif" ALT="GENERATE/DIAMOND.gif" WIDTH="8" HEIGHT="12" ALIGN="BASELINE" BORDER="0">&nbsp;&nbsp;&nbsp;&nbsp;
two-compartment mixing (<B>2COMP</B>),</P>
<P STYLE="font-size: 10pt ; margin: 0pt  18pt  0pt  18pt ; text-indent: -18pt ; font-family: Arial,sans-serif; "><IMG SRC="GENERATE/DIAMOND.gif" ALT="GENERATE/DIAMOND.gif" WIDTH="8" HEIGHT="12" ALIGN="BASELINE" BORDER="0">&nbsp;&nbsp;&nbsp;&nbsp;
first-in-first-out plug flow <B>(FIFO</B>),</P>
<P STYLE="font-size: 10pt ; margin: 0pt  18pt  0pt  18pt ; text-indent: -18pt ; font-family: Arial,sans-serif; "><IMG SRC="GENERATE/DIAMOND.gif" ALT="GENERATE/DIAMOND.gif" WIDTH="8" HEIGHT="12" ALIGN="BASELINE" BORDER="0">&nbsp;&nbsp;&nbsp;&nbsp;
last-in-first-out plug flow (<B>LIFO</B>).</P>
<P STYLE="font-size: 10pt ; margin: 0pt  1px  0pt  0pt ; font-family: Arial,sans-serif; ">
See the <A HREF="Tank_Mix.htm">Mixing Models</A> topic for more information.</P>
<P CLASS="Base">
<B><U>Mixing Fraction</U></B></P>
<P CLASS="Base">
The fraction of the tank's total volume that comprises the inlet-outlet compartment of the two-compartment (<B>2COMP</B>) mixing model. Can be left blank if another type of mixing model is employed.</P>
<P CLASS="Base">
<B><U>Reaction Coefficient</U></B></P>
<P CLASS="Base">
The bulk reaction coefficient for chemical reactions in the tank. Use a positive value for growth reactions and a negative value for decay. Time units are 1/days. Leave blank if the Global Bulk reaction coefficient will apply. See <A HREF="Wate0047.htm">Water Quality Reactions</A> for more information.</P>
<P CLASS="Base">
<B><U>Initial Quality</U></B></P>
<P CLASS="Base">
Water quality level in the tank at the start of the simulation. Can be left blank if no water quality analysis is being made or if the level is zero.</P>
<P CLASS="Base">
<B><U>Source Quality</U></B></P>
<P CLASS="Base">
Click the ellipsis button to display a  <A HREF="Source_Q.htm">Source Quality Editor</A> in which the quality of water entering the network from the tank can be specified (regardless of what the actual quality in the tank is).</P>
<P CLASS="Base">
&nbsp;</P>
<P CLASS="Base">
&nbsp;</P>
<P CLASS="Base">
&nbsp;</P>


<!--ForeHelp.Ignore-->
<OBJECT	ID="PopObj"	CLASSID="clsid:9C9393C4-85B0-11D0-9180-74F103C10000"></OBJECT>

<SCRIPT LANGUAGE=JAVASCRIPT>
<!--

function IsIE () {

	var 	agent;
	var		version;
	var		i;
	
	agent = navigator.userAgent;
	i = agent.indexOf ("MSIE");
	if (i > 0) {	// get IE version
		version = parseInt (agent.substring (i+5, agent.indexOf (".", i)));
		return version;
		}
	else
		return 0;
	};


function DoPopup (file, flags, width, height) {

	var		path;
	var 	i;
	var		str1;
	var		str2;
	var		cc;

	i = file.indexOf (":");	// if file has a colon, just use it
	if (i == -1) {
		// make full path for string
		i = IsIE ();
		if (i > 0) {	// make full path
			if (i >= 4)
				str1 = document.location.href;
			else
				str1 = document.location;

			// check to see if mk:@MSIT...
			if (str1.charAt(0)=="m" && str1.charAt(1)=="k" && str1.charAt(2)==":") {
				// parse string and convert all \ to /
				i = 0;
				str2 = "";
				while (i < str1.length - 1) {
					cc = str1.charAt (i);
					if (cc == "\\") {
						if (str2 != "mk:")
							str2 += "/";
						}
					else {
						if (cc == "/") {
							if (str2 != "mk:")
								str2 += cc;
							}
						else
							str2 += cc;
						}

					i++;
					}

				i = str2.lastIndexOf ("::");
				if (i != -1)
					path = str2.substring (0, i+2);	// go beyond ::
				path += "/";
				path += file;
				}
			else {
				i = str1.lastIndexOf ("\\");
				if (i == -1)	// try with /
					i = str1.lastIndexOf ("/");

				if (i != -1)
					path = str1.substring (0, i+1);
				path += file;
				}
			}
		else
			path = file;
		}
	else
		path = file;

	PopObj.ShowPopup (path, flags, width, height);
	};

// -->
</SCRIPT>
<!--ForeHelp.EndIgnore-->


</BODY></HTML>
